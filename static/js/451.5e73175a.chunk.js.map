{"version":3,"file":"static/js/451.5e73175a.chunk.js","mappings":"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","sources":["components/DepartamentsList/DepartamentsList.styled.js","components/Map/Map.jsx","components/DepartamentsList/DepartamentsList.jsx","components/SearchDepartament/SearchDepartament.styled.js","components/SearchDepartament/SearchDepartament.jsx","pages/Departament/Departament.jsx","store/ttn/ttn-selectors.js","stylesheet/breakpoints.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from '../../stylesheet/breakpoints';\n\nexport const DepartamentBox = styled.ul`\n  @media ${device.desktop} {\n    padding: 20px 0;\n  }\n`;\n\nexport const DepartamentItem = styled.li`\n  margin-bottom: 10px;\n  padding: 5px;\n  background: #80808017;\n\n  cursor: pointer;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const DropDownBox = styled.div`\n  max-height: 0px;\n  overflow: hidden;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    max-height: 100vh;\n  }\n`;\n","import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n\nconst Map = data => {\n  const { lat, long, name } = data;\n  const position = [lat, long];\n\n  return (\n    <MapContainer\n      center={position}\n      zoom={13}\n      style={{ width: '100%', height: '400px' }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={position}>\n        <Popup>{name}</Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import { useSelector } from 'react-redux';\nimport { selectDepartmentsList } from '../../store/ttn/ttn-selectors';\nimport {\n  DepartamentBox,\n  DepartamentItem,\n  DropDownBox,\n} from './DepartamentsList.styled';\nimport { useState } from 'react';\n\nimport 'leaflet/dist/leaflet.css';\nimport Map from '../Map/Map';\n\nconst DepartamentsList = () => {\n  const departaments = useSelector(selectDepartmentsList);\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const dropDownClick = idx => {\n    setActiveIndex(prevIndex => (prevIndex === idx ? null : idx));\n  };\n\n  return (\n    <DepartamentBox>\n      {departaments?.map(dep => (\n        <DepartamentItem key={dep.SiteKey}>\n          <h2\n            onClick={() => {\n              dropDownClick(dep.SiteKey);\n            }}\n          >\n            {dep.Description} ↓\n          </h2>\n          <DropDownBox\n            className={activeIndex === dep.SiteKey ? 'active' : null}\n          >\n            <Map lat={dep.Latitude} long={dep.Longitude} name={dep.Description}/>\n          </DropDownBox>\n        </DepartamentItem>\n      ))}\n    </DepartamentBox>\n  );\n};\n\nexport default DepartamentsList;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { device } from '../../stylesheet/breakpoints';\n\nexport const FormBox = styled(Form)`\n  position: relative;\n  width: 100%;\n  \n  margin-bottom: 10px;\n  @media ${device.desktop} {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 20px 0;\n  }\n`;\nexport const FieldForm = styled(Field)`\n  width: 100%;\n  border: 1px solid #0000002e;\n  border-radius: 5px;\n  padding: 5px 20px;\n  margin-bottom: 10px;\n\n  @media ${device.desktop} {\n    width: 200px;\n    margin-bottom: 0;\n    margin-right: 10px;\n  }\n`;\nexport const FormBtn = styled.button`\n  padding: 5px 20px;\n  text-align: center;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 1px 2px #a7a7a7;\n  width: 100%;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background: #ff392e;\n    color: #fff;\n  }\n\n  @media ${device.desktop} {\n    width: 200px;\n    margin-right: 20px;\n    margin-bottom: 0px;\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\nexport const NavigateBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 20px 0;\n  @media ${device.desktop} {\n    display: block;\n    padding: 0;\n  }\n`;\n\nexport const ErrorMsg = styled.p`\n  position: absolute;\n  bottom: -5px;\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { fetchDepartments } from '../../store/ttn/ttn-operation';\nimport { useState } from 'react';\nimport { selectDepartmentsError, selectDepartmentsList, } from '../../store/ttn/ttn-selectors';\nimport { ErrorMsg, FieldForm, FormBox, FormBtn, NavigateBtn } from './SearchDepartament.styled';\n\nconst schema = yup.object().shape({\n  cityName: yup\n    .string()\n    .min(3, 'Мінімум 3 символа')\n    .max(30, 'Максимум 25 символів')\n    .matches(\n      /^[А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']*(-[А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']+)*( [А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']+)*$/,\n      'Введіть назву літерами українського алфавіту з великої букви'\n    )\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n\nconst SearchDepartament = () => {\n  const [page, setPage] = useState(1);\n  const dispatch = useDispatch();\n  const DepartamentList = useSelector(selectDepartmentsList);\n  let error = useSelector(selectDepartmentsError);\n\n  const initialValues = {\n    cityName: '',\n  };\n\n  const handleSubmit = values => {\n    dispatch(fetchDepartments({ city: values.cityName, page: page }));\n  };\nconsole.log(DepartamentList.length);\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ resetForm, handleSubmit, handleChange }) => {\n          return (\n            <FormBox>\n              <div>\n              <FieldForm\n                type=\"text\"\n                name=\"cityName\"\n                placeholder=\"Введіть назву міста\"\n                onChange={handleChange}\n              />\n              <ErrorMessage name=\"cityName\" component={ErrorMsg} />\n              {error ? <ErrorMsg>Невірна назва міста</ErrorMsg> : null}\n              <FormBtn type=\"submit\" onSubmit={handleSubmit}>\n                Шукати відділення\n              </FormBtn>\n              </div>\n              <NavigateBtn>\n              {page >= 2 ? (\n                <FormBtn\n                  type=\"button\"\n                  onClick={() => {\n                    setPage(prev => prev - 1);\n                    handleSubmit();\n                  }}\n                >\n                  Назад\n                </FormBtn>\n              ) : null}\n              {DepartamentList.length > 1 && DepartamentList.length <=30  ? (\n                <FormBtn\n                  type=\"button\"\n                  onClick={() => {\n                    setPage(prev => prev + 1);\n                    handleSubmit();\n                  }}\n                >\n                  Наступна\n                </FormBtn>\n              ) : null}\n              </NavigateBtn>\n            </FormBox>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default SearchDepartament;\n","import DepartamentsList from \"../../components/DepartamentsList/DepartamentsList\"\nimport SearchDepartament from \"../../components/SearchDepartament/SearchDepartament\"\n\nconst Departament =()=>{\n    return(\n        <>\n        <SearchDepartament/>\n        <DepartamentsList/>\n        </>\n\n    ) \n}\n\n\nexport default Departament","export const selectInfo = state => state.info.ttnInfo;\n\nexport const selectError = state => state.info.infoError;\n\nexport const selectNumbersList = state => state.info.ttnNumbersList;\n\nexport const selectDepartmentsList = state => state.info.departmentsList;\n\nexport const selectDepartmentsError = state => state.info.departmentsError;\n\nexport const selectTotalCount = state => state.info.totalCount;\n\nexport const selectIsLoading = state => state.info.isLoading;\n","export const device = {\n    mobile: `(max-width: 320px)`,\n    tablet: `(min-width: 780px) `,\n    desktop: `(min-width: 1280px)`,\n  \n  };"],"names":["DepartamentBox","styled","ul","_templateObject","_taggedTemplateLiteral","device","desktop","DepartamentItem","li","_templateObject2","DropDownBox","div","_templateObject3","data","lat","long","name","position","_jsxs","MapContainer","center","zoom","style","width","height","children","_jsx","TileLayer","url","attribution","Marker","Popup","departaments","useSelector","selectDepartmentsList","_useState","useState","_useState2","_slicedToArray","activeIndex","setActiveIndex","map","dep","onClick","idx","SiteKey","prevIndex","Description","className","Map","Latitude","Longitude","FormBox","Form","FieldForm","Field","FormBtn","button","NavigateBtn","_templateObject4","ErrorMsg","p","_templateObject5","schema","yup","shape","cityName","min","max","matches","required","page","setPage","dispatch","useDispatch","DepartamentList","error","selectDepartmentsError","console","log","length","_Fragment","Formik","initialValues","validationSchema","onSubmit","values","fetchDepartments","city","_ref","resetForm","handleSubmit","handleChange","type","placeholder","onChange","ErrorMessage","component","prev","SearchDepartament","DepartamentsList","selectInfo","state","info","ttnInfo","selectError","infoError","selectNumbersList","ttnNumbersList","departmentsList","departmentsError","selectIsLoading","isLoading","mobile","tablet"],"sourceRoot":""}
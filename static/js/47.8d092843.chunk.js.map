{"version":3,"file":"static/js/47.8d092843.chunk.js","mappings":"uRAIaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAOtBC,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,0NAO3BI,EAAAA,EAAOC,SAMLC,EAAUT,EAAAA,GAAOU,OAAMC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,mWAazBI,EAAAA,EAAOC,SAOLI,EAAWZ,EAAAA,GAAOa,EAACC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kD,SCrC1BY,EAASC,EAAAA,KAAaC,MAAM,CAChCC,UAAWF,EAAAA,KAERG,QAAQ,WAAY,0EACpBC,SAAS,4KA4Cd,EAzCoB,WAClB,IAAIC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAClBC,GAAWC,EAAAA,EAAAA,MAWjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAXkB,CACpBV,UAAW,IAWTW,iBAAkBd,EAClBe,SATgB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC7BT,GAASU,EAAAA,EAAAA,GAAUH,EAAOb,YAC1Be,GACF,EAM0BE,SAErB,SAAAC,GAAYA,EAATH,UAA6C,IAAlCI,EAAYD,EAAZC,aAAcC,EAAYF,EAAZE,aAC3B,OACEC,EAAAA,EAAAA,MAACxC,EAAO,CAAAoC,SAAA,EACNT,EAAAA,EAAAA,KAACtB,EAAS,CACRoC,KAAK,OACLC,KAAK,YACLC,YAAY,wFACZC,SAAUL,KAEZZ,EAAAA,EAAAA,KAACkB,EAAAA,GAAY,CAACH,KAAK,YAAYI,UAAWjC,IACzCS,GAAQK,EAAAA,EAAAA,KAACd,EAAQ,CAAAuB,SAAC,uGAAgC,MAEnDT,EAAAA,EAAAA,KAACjB,EAAO,CAAC+B,KAAK,SAASV,SAAUO,EAAaF,SAAC,4FAKrD,GAGN,EClDaW,EAAgB9C,EAAAA,GAAO+C,IAAG7C,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kRAe5BI,EAAAA,EAAOC,SAKLwC,EAAsBhD,EAAAA,GAAOiD,GAAE3C,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kCAI/B+C,EAAiBlD,EAAAA,GAAOmD,GAAExC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kCAI1BiD,EAAUpD,EAAAA,GAAOqD,GAAEvC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,sMAanBmD,EAAkBtD,EAAAA,GAAOU,OAAM6C,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,oU,UCA5C,EAhCmB,WACjB,IAAMqD,GAAUlC,EAAAA,EAAAA,IAAYmC,EAAAA,IAEtBjC,GAAWC,EAAAA,EAAAA,MAUjB,OACEc,EAAAA,EAAAA,MAACO,EAAa,CAAAX,SAAA,EACZT,EAAAA,EAAAA,KAACsB,EAAmB,CAAAb,SAAC,+CACpBqB,EAAQE,QAAU,GACjBnB,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAAxB,SAAA,EACET,EAAAA,EAAAA,KAACwB,EAAc,CAAAf,SACZqB,EAAQI,KAAI,SAAAC,GAAG,OACdnC,EAAAA,EAAAA,KAAC0B,EAAO,CAAWU,QAAS,kBAftBC,EAesCF,OAdtDrC,GAASU,EAAAA,EAAAA,GAAU6B,IADH,IAAAA,CAe0C,EAAC5B,SAAE0B,GAArCA,EAAmD,OAGrEnC,EAAAA,EAAAA,KAAC4B,EAAe,CAACd,KAAK,SAASsB,QAdhB,WACrBtC,GAASwC,EAAAA,EAAAA,KACX,EAY+D7B,SAAC,wIAIxD,OAGV,E,UCxCa8B,EAAWjE,EAAAA,GAAO+C,IAAG7C,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6OAcrB+D,EAAUlE,EAAAA,GAAOmE,GAAE7D,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qDAInBiE,EAAgBpE,EAAAA,GAAOqE,GAAE1D,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+BCoBtC,EAnCiB,WACf,IAAAmE,GACEhD,EAAAA,EAAAA,IAAYiD,EAAAA,IADNC,EAAMF,EAANE,OAAQC,EAAUH,EAAVG,WAAYC,EAAeJ,EAAfI,gBAAiBC,EAAkBL,EAAlBK,mBAGvCC,GAAYtD,EAAAA,EAAAA,IAAYuD,EAAAA,IAC9B,OACEnD,EAAAA,EAAAA,KAACuC,EAAQ,CAAA9B,SACNyC,GACClD,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,KAEPpD,EAAAA,EAAAA,KAAA,SAAAS,UACEI,EAAAA,EAAAA,MAAA,SAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAC2B,EAAO,CAAA/B,SAAA,EACNT,EAAAA,EAAAA,KAAC0C,EAAa,CAAAjC,SAAC,4FACfT,EAAAA,EAAAA,KAAA,MAAAS,SAAKqC,OAES,MAAfC,GACClC,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAAxB,SAAA,EACEI,EAAAA,EAAAA,MAAC2B,EAAO,CAAA/B,SAAA,EACNT,EAAAA,EAAAA,KAAC0C,EAAa,CAAAjC,SAAC,yEACfT,EAAAA,EAAAA,KAAA,MAAAS,SAAKuC,QAEPnC,EAAAA,EAAAA,MAAC2B,EAAO,CAAA/B,SAAA,EACNT,EAAAA,EAAAA,KAAC0C,EAAa,CAAAjC,SAAC,uDACfT,EAAAA,EAAAA,KAAA,MAAAS,SAAKwC,UAGP,WAMhB,EChCaI,GAHU/E,EAAAA,GAAOgF,QAAO9E,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAGbH,EAAAA,GAAOgF,QAAO1E,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4EAC3BI,EAAAA,EAAOC,UCUlB,EAZa,WACX,OACE+B,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAAxB,SAAA,EACET,EAAAA,EAAAA,KAACuD,EAAW,KACZ1C,EAAAA,EAAAA,MAACwC,EAAQ,CAAA5C,SAAA,EACPT,EAAAA,EAAAA,KAACwD,EAAQ,KACTxD,EAAAA,EAAAA,KAACyD,EAAU,SAInB,C,gLCfO,IAAMZ,EAAa,SAAAa,GAAK,OAAIA,EAAMC,KAAKC,OAAQ,EAEzC/D,EAAc,SAAA6D,GAAK,OAAIA,EAAMC,KAAKE,SAAU,EAE5C9B,EAAoB,SAAA2B,GAAK,OAAIA,EAAMC,KAAKG,cAAe,EAEvDC,EAAwB,SAAAL,GAAK,OAAIA,EAAMC,KAAKK,eAAgB,EAE5DC,EAAyB,SAAAP,GAAK,OAAIA,EAAMC,KAAKO,gBAAiB,EAI9Df,EAAkB,SAAAO,GAAK,OAAIA,EAAMC,KAAKT,SAAU,C,sDCZtD,IAAMrE,EAAS,CAClBsF,OAAO,qBACPC,OAAO,sBACPtF,QAAQ,sB","sources":["components/SearchInput/SearchInput.styled.js","components/SearchInput/SearchInput.jsx","components/TtnHistory/TtnHistory.styled.js","components/TtnHistory/TtnHistory.jsx","components/TtnTable/TtnTable.styled.js","components/TtnTable/TtnTable.jsx","pages/Main/Main.styled.js","pages/Main/Main.jsx","store/ttn/ttn-selectors.js","stylesheet/breakpoints.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { device } from '../../stylesheet/breakpoints';\n\nexport const FormBox = styled(Form)`\n  position: relative;\n  width: 100%;\n  padding: 20px 0;\n  margin-bottom: 10px;\n`;\n\nexport const FieldForm = styled(Field)`\n  margin-bottom: 10px;\n  border: 1px solid #0000002e;\n  border-radius: 5px;\n  padding: 5px 20px;\n  width: 100%;\n\n  @media ${device.desktop} {\n    margin-right: 20px;\n    margin-bottom: 0px;\n    width: 300px;\n  }\n`;\nexport const FormBtn = styled.button`\n  width: 100%;\n  padding: 5px 20px;\n  text-align: center;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 1px 2px #a7a7a7;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background: #ff392e;\n    color: #fff;\n  }\n\n  @media ${device.desktop} {\n    margin-right: 20px;\n    margin-bottom: 0px;\n    width: 200px;\n  }\n`;\n\nexport const ErrorMsg = styled.p`\n  position: absolute;\n  bottom: -5px;\n`;\n","import * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport { selectError } from '../../store/ttn/ttn-selectors';\nimport { fetchInfo } from '../../store/ttn/ttn-operation';\nimport { ErrorMsg, FieldForm, FormBox, FormBtn } from './SearchInput.styled';\n\nconst schema = yup.object().shape({\n  ttnNumber: yup\n    .string()\n    .matches(/^\\d{14}$/, 'Введіть 14 цифр')\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n\nconst SearchInput = () => {\n  let error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    ttnNumber: '',\n  };\n\n  const submitFetch = (values, { resetForm }) => {\n    dispatch(fetchInfo(values.ttnNumber));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={submitFetch}\n    >\n      {({ resetForm, handleSubmit, handleChange }) => {\n        return (\n          <FormBox>\n            <FieldForm\n              type=\"text\"\n              name=\"ttnNumber\"\n              placeholder=\"Номер накладної\"\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"ttnNumber\" component={ErrorMsg} />\n            {error ? <ErrorMsg>Невірний номер ТТН</ErrorMsg> : null}\n\n            <FormBtn type=\"submit\" onSubmit={handleSubmit}>\n              Отримати статус\n            </FormBtn>\n          </FormBox>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default SearchInput;\n","import styled from 'styled-components';\nimport { device } from '../../stylesheet/breakpoints';\n\nexport const TtnHistoryBox = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  \n  min-height: 300px;\n\n  padding: 20px;\n  border: 1px solid #ff392e;\n  border-radius: 5px;\n\n  background: #80808017;\n  \n  @media ${device.desktop} {\n    width: 300px;\n  }\n`;\n\nexport const TtnHistoryBoxHeader = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const TtnHistoriList = styled.ul`\n  margin-bottom: 10px;\n`;\n\nexport const TtnItem = styled.li`\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0px;\n  }\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  &:hover {\n    color: #ff392e;\n  }\n`;\n\nexport const ClearHistoryBtn = styled.button`\n  position: absolute;\n  bottom: 0;\n  padding: 5px 20px;\n  margin: 20px;\n  text-align: center;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 1px 2px #a7a7a7;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  background: #ffff;\n  &:hover {\n    background: #ff392e;\n    color: #fff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectNumbersList } from '../../store/ttn/ttn-selectors';\nimport {\n  ClearHistoryBtn,\n  TtnHistoriList,\n  TtnHistoryBox,\n  TtnHistoryBoxHeader,\n  TtnItem,\n} from './TtnHistory.styled';\nimport { clearRequestHistory } from '../../store/ttn/ttn-slice';\nimport { fetchInfo } from '../../store/ttn/ttn-operation';\n\nconst TtnHistory = () => {\n  const ttnList = useSelector(selectNumbersList);\n\n  const dispatch = useDispatch();\n\n  const SelectTtn = number => {\n    dispatch(fetchInfo(number));\n  };\n\n  const cliarHisoryTtn = () => {\n    dispatch(clearRequestHistory());\n  };\n\n  return (\n    <TtnHistoryBox>\n      <TtnHistoryBoxHeader>Історія</TtnHistoryBoxHeader>\n      {ttnList.length >= 1 ? (\n        <>\n          <TtnHistoriList>\n            {ttnList.map(ttn => (\n              <TtnItem key={ttn} onClick={() => SelectTtn(ttn)}>{ttn}</TtnItem>\n            ))}\n          </TtnHistoriList>\n          <ClearHistoryBtn type=\"button\" onClick={cliarHisoryTtn}>\n            Очистити історію пошуку\n          </ClearHistoryBtn>\n        </>\n      ) : null}\n    </TtnHistoryBox>\n  );\n};\n\nexport default TtnHistory;\n","import styled from 'styled-components';\n\nexport const TableBox = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n\n  width: 100%;\n  min-height: 300px;\n  margin-right: 20px;\n  padding: 20px;\n  background: #80808017;\n  border: 1px solid #ff392e;\n  border-radius: 5px;\n`;\nexport const TableTr = styled.tr`\n  display: block;\n  margin-bottom: 10px;\n`;\nexport const TableTdHeader = styled.td`\n  min-width: 140px;\n`;\n\n","import { useSelector } from 'react-redux';\nimport { selectInfo, selectIsLoading } from '../../store/ttn/ttn-selectors';\nimport Loader from '../Loader/Loader';\nimport { TableBox, TableTdHeader, TableTr } from './TtnTable.styled';\n\nconst TtnTable = () => {\n  const { Status, StatusCode, WarehouseSender, WarehouseRecipient } =\n    useSelector(selectInfo);\n\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <TableBox>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <table>\n          <tbody>\n            <TableTr>\n              <TableTdHeader>Статус доставки:</TableTdHeader>\n              <td>{Status}</td>\n            </TableTr>\n            {StatusCode !== '3' ? (\n              <>\n                <TableTr>\n                  <TableTdHeader>Відправлено:</TableTdHeader>\n                  <td>{WarehouseSender}</td>\n                </TableTr>\n                <TableTr>\n                  <TableTdHeader>Отримано:</TableTdHeader>\n                  <td>{WarehouseRecipient}</td>\n                </TableTr>\n              </>\n            ) : null}\n          </tbody>\n        </table>\n      )}\n    </TableBox>\n  );\n};\n\nexport default TtnTable;\n","import styled from 'styled-components';\nimport { device } from '../../stylesheet/breakpoints';\n\nexport const MainBox = styled.section`\n  display: flex;\n`;\nexport const MainInfo = styled.section`\n  @media ${device.desktop} {\n    display: flex;\n    align-items: center;\n  }\n`;\n","import SearchInput from '../../components/SearchInput/SearchInput';\nimport TtnHistory from '../../components/TtnHistory/TtnHistory';\nimport TtnTable from '../../components/TtnTable/TtnTable';\nimport { MainInfo } from './Main.styled';\n\nconst Main = () => {\n  return (\n    <>\n      <SearchInput />\n      <MainInfo>\n        <TtnTable />\n        <TtnHistory />\n      </MainInfo>\n    </>\n  );\n};\n\nexport default Main;\n","export const selectInfo = state => state.info.ttnInfo;\n\nexport const selectError = state => state.info.infoError;\n\nexport const selectNumbersList = state => state.info.ttnNumbersList;\n\nexport const selectDepartmentsList = state => state.info.departmentsList;\n\nexport const selectDepartmentsError = state => state.info.departmentsError;\n\nexport const selectTotalCount = state => state.info.totalCount;\n\nexport const selectIsLoading = state => state.info.isLoading;\n","export const device = {\n    mobile: `(max-width: 320px)`,\n    tablet: `(min-width: 780px) `,\n    desktop: `(min-width: 1280px)`,\n  \n  };"],"names":["FormBox","styled","Form","_templateObject","_taggedTemplateLiteral","FieldForm","Field","_templateObject2","device","desktop","FormBtn","button","_templateObject3","ErrorMsg","p","_templateObject4","schema","yup","shape","ttnNumber","matches","required","error","useSelector","selectError","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","fetchInfo","children","_ref2","handleSubmit","handleChange","_jsxs","type","name","placeholder","onChange","ErrorMessage","component","TtnHistoryBox","div","TtnHistoryBoxHeader","h2","TtnHistoriList","ul","TtnItem","li","ClearHistoryBtn","_templateObject5","ttnList","selectNumbersList","length","_Fragment","map","ttn","onClick","number","clearRequestHistory","TableBox","TableTr","tr","TableTdHeader","td","_useSelector","selectInfo","Status","StatusCode","WarehouseSender","WarehouseRecipient","isLoading","selectIsLoading","Loader","MainInfo","section","SearchInput","TtnTable","TtnHistory","state","info","ttnInfo","infoError","ttnNumbersList","selectDepartmentsList","departmentsList","selectDepartmentsError","departmentsError","mobile","tablet"],"sourceRoot":""}